rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the document belongs to the current user
    function isOwner() {
      return request.auth.uid == resource.data.userId;
    }
    
    // Transactions collection
    match /transactions/{transactionId} {
      allow read: if isAuthenticated() && isOwner();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && isOwner();
    }
    
    // Budgets collection
    match /budgets/{budgetId} {
      allow read: if isAuthenticated() && isOwner();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid && request.resource.data.amount > 0;
      allow update: if isAuthenticated() && isOwner() && request.resource.data.amount > 0;
      allow delete: if isAuthenticated() && isOwner();
    }
    
    // Categories collection
    match /categories/{categoryId} {
      allow read: if isAuthenticated() && isOwner();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && isOwner();
    }
    
    // Users collection
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
